# Generated by Django 4.2.3 on 2025-01-29 13:00

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('bills', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Apartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apartment_nr', models.IntegerField(validators=[django.core.validators.MinValueValidator(1, 'Must be at least 1')])),
                ('area', models.IntegerField(validators=[django.core.validators.MinValueValidator(1, 'Must be at least 1')])),
                ('wm_count', models.IntegerField(validators=[django.core.validators.MinValueValidator(0, 'Can not be negative number')])),
                ('hm_count', models.IntegerField(validators=[django.core.validators.MinValueValidator(0, 'Can not be negative number')])),
                ('person_count', models.IntegerField(validators=[django.core.validators.MinValueValidator(0, 'Can not be negative number')])),
            ],
        ),
        migrations.CreateModel(
            name='House',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(6, 'Must be at least 6 characters'), django.core.validators.MaxLengthValidator(50, 'Max length is 50 characters')])),
                ('apartment_count', models.IntegerField(validators=[django.core.validators.MinValueValidator(1, 'Must be at least 1')])),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(3, 'Must be at least 3 characters')])),
                ('service_type', models.CharField(choices=[('public', 'Public'), ('individual', 'Individual')], max_length=10)),
                ('measuring_units', models.CharField(max_length=4, validators=[django.core.validators.MinLengthValidator(1, 'Must be at least 1 character')])),
                ('meters_of_volume', models.BooleanField(choices=[(True, 'With Meters'), (False, 'No Meters')], default=True)),
            ],
        ),
        migrations.AlterField(
            model_name='provider',
            name='account',
            field=models.CharField(max_length=25, validators=[django.core.validators.MinLengthValidator(10, 'Must be at least 10 characters'), django.core.validators.MaxLengthValidator(25, 'Max length is 25 characters')]),
        ),
        migrations.AlterField(
            model_name='provider',
            name='business_form',
            field=models.CharField(max_length=15, validators=[django.core.validators.MinLengthValidator(2, 'Must be at least 2 characters'), django.core.validators.MaxLengthValidator(15, 'Max length is 15 characters')]),
        ),
        migrations.AlterField(
            model_name='provider',
            name='name',
            field=models.CharField(max_length=50, validators=[django.core.validators.MinLengthValidator(2, 'Must be at least 2 characters'), django.core.validators.MaxLengthValidator(50, 'Max length is 50 characters')]),
        ),
        migrations.AlterField(
            model_name='provider',
            name='reg_number',
            field=models.CharField(max_length=25, validators=[django.core.validators.MinLengthValidator(11, 'Must be at least 11 characters'), django.core.validators.MaxLengthValidator(25, 'Max length is 25 characters')]),
        ),
        migrations.CreateModel(
            name='Meter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('cold', 'Cold water'), ('hot', 'Hot water'), ('heat', 'Heat'), ('other', 'Other')], max_length=10)),
                ('number', models.IntegerField(validators=[django.core.validators.MinValueValidator(0, 'Can not be negative number')])),
                ('reading_default', models.IntegerField(validators=[django.core.validators.MinValueValidator(0, 'Can not be negative number')])),
                ('verification_date', models.DateField()),
                ('previous_reading', models.IntegerField(validators=[django.core.validators.MinValueValidator(0, 'Can not be negative number')])),
                ('new_reading', models.IntegerField(validators=[django.core.validators.MinValueValidator(0, 'Can not be negative number')])),
                ('apartment_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bills.apartment')),
            ],
        ),
        migrations.CreateModel(
            name='Consumer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, validators=[django.core.validators.MinLengthValidator(5, 'Must be at least 5 characters')])),
                ('contract_nr', models.CharField(max_length=50, validators=[django.core.validators.MinLengthValidator(2, 'Must be at least 2 characters')])),
                ('e_mail', models.EmailField(max_length=254)),
                ('billing_address', models.CharField(max_length=50, validators=[django.core.validators.MinLengthValidator(5, 'Must be at least 5 characters')])),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bills.house')),
            ],
        ),
        migrations.AddField(
            model_name='apartment',
            name='consumer',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.PROTECT, to='bills.consumer'),
        ),
        migrations.AddField(
            model_name='apartment',
            name='houseLocation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bills.house'),
        ),
    ]
